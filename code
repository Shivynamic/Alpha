import requests
import speech_recognition as sr
import pyttsx3
import datetime
import wikipedia
import os
import webbrowser
import smtplib
import cv2
import random
from requests import get
import pywhatkit as kit
import sys
import pyjokes
import pyautogui
import time
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import instaloader
import PyPDF2


engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
# print(voices[1].id)
engine.setProperty('voice',voices[0].id)

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning!")
    
    elif hour>=12 and hour<18:
        speak("Good Afternoon!")
    
    else:
        speak("Good Evening!")

    speak("I am Alpha,mam, your assistant! Please tell me how may I help you?")

def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone(device_index=1) as source:
        print("Listening.............")
        r.pause_threshold = 1
        audio = r.listen(source,timeout=10, phrase_time_limit=10)
    
    try:
        print("Recognizing....")
        query = r.recognize_google(audio, language='en-in')
        print(f"User:  {query}\n")

    except Exception as e:
        # print(e)

        print("Sorry I am not able to get it! Say it agaain please.....")
        return "None"

    return query

def pdf_reader():
    book = open('ab.pdf','rb')
    pdfReader = PyPDF2.PdfFileReader(book)
    pages = pdfReader.numPages
    speak(f"Total numbers of pages in this book {pages} ")
    speak("Mam please enter the page number I have to read")
    pg = int(input("Please enter the page number:  "))
    page = pdfReader.getPage(pg)
    text = page.extractText()
    speak(text)


def news():
    main_url= 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=ab799af526cf46b2bdebc641493c19f1'

    main_page = requests.get(main_url).json()
    articles = main_page["articles"]
    head = []
    for ar in articles:
        head.append(ar["title"])
    speak("Today's news are as follows:")
    for i in range(10):
        speak(f" {head[i]} ")



def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com',587)
    server.ehlo()
    server.starttls()
    server.login('pamy5421@gmail.com','shivangi@1305')
    server.sendmail('pamy5421@gmail.com', to, content)
    server.close()


if __name__ == "__main__":
    wishMe()
    # speak("This is first voiceover project. Shivangi made it. She is awesome")
    while True:
        query = takeCommand().lower()

        if 'wikipedia' in query:
            speak('Searching Wikipedia....')
            query = query.replace("wikipedia","")
            results = wikipedia.summary(query, sentences =2)
            speak("According to wikipedia")
            print(results)
            speak(results)
        elif 'open youtube' in query:
            webbrowser.open('youtube.com')
        elif 'open google' in query:
            speak("Mam! What should I search on Google.")
            cm = takeCommand().lower()
            webbrowser.open(f"{cm}")
        
        elif 'send message to shreya' in query:
            kit.sendwhatmsg("+917415530008","This is for testing purpose! Just coding",17,51)

        elif 'play songs on youtube' in query:
            kit.playonyt("see you again")
        
        elif 'attachment email' in query:

            speak("Mam! What should I write in the mail?")
            query = takeCommand().lower()
            if 'send a file' in query:
                email = 'pamy5421@gmail.com'
                password = 'shivangi@1305'
                send_to_email = 'shivangi13sharma05@gmail.com'      
                speak("Okay Mam! What is the subject for this email")
                query = takeCommand().lower()
                subject = query
                speak("and what is the message for this email mam?")
                query2 = takeCommand().lower()
                message = query2
                speak("Mam please enter the correct path of the file in the shell!")
                file_location = input("Please enter the path here")

                speak("Please Wait while I am sending the email.")

                msg = MIMEMultipart()
                msg['From'] = email
                msg['To'] = send_to_email
                msg['Subject'] = subject

                msg.attach(MIMEText(message, 'plain'))

                filename = os.path.basename(file_location)
                attachment = open(file_location, "rb")
                part = MIMEBase('application', 'octet-stream')
                part.set_payload(attachment.read())
                encoders.encode_base64(part)
                part.add_header('Content-Disposition', "attachment: filename = %s" % filename)

                msg.attach(part)

                server = smtplib.SMTP('smtp.gmail.com',587)
                # server.ehlo()
                server.starttls()
                server.login('pamy5421@gmail.com','shivangi@1305')
                text = msg.as_string()
                server.sendmail(email, send_to_email, text)
                server.quit()
                speak("Email with attachment has been sent to Shivangi!")

            else:
                email = 'pamy5421@gmail.com'
                password = 'shivangi@1305'
                send_to_email = 'shivangi13sharma05@gmail.com'
                message = query

                server = smtplib.SMTP('smtp.gmail.com',587)
                # server.ehlo()
                server.starttls()
                server.login('pamy5421@gmail.com','shivangi@1305')
                server.sendmail(email, send_to_email, message)
                server.quit()
                speak("Email with attachment has been sent to Shivangi!")

            

        elif 'open geeksforgeeks' in query:
            webbrowser.open('geeksforgeeks.com')
 
        elif 'open stackoverflow' in query:
            webbrowser.open('stackoverflow.com')
        
        elif 'play music' in query:
            music_dir = 'C:\\music\\songs'
            songs = os.listdir(music_dir)
            print(songs)
            rd = random.choice(songs)
            os.startfile(os.path.join(music_dir, rd))

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Mam, the time is {strTime}")

        elif 'open notepad' in query:
            codePote = "C:\\WINDOWS\\system32\\notepad.exe"
            os.startfile(codePote)
        
        elif 'open code' in query:
            codePath = "C:\\Users\\shiva\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)

        elif 'open command prompt' in query:
            os.system("start cmd")
        
        elif 'open camera' in query:
            cap = cv2.VideoCapture(0)
            while True:
                ret ,img = cap.read()
                cv2.imshow('webcam',img)
                k = cv2.waitKey(50)
                if k==27:
                    break;
            cap.release()
            cv2.destroyAllWindows()

        elif 'ip address' in query:
            ip = get('https://api.ipify.org').text
            speak(f"The ip address for your system is {ip}")

        elif 'open facebook' in query:
            webbrowser.open("facebook.com")

        elif 'set alarm' in query:
            nn = int(datetime.datetime.now().hour)
            # print(nn)
            if nn == 15:
                music_dir = 'C:\\Users\\shiva\\Music'
                songs = os.listdir(music_dir)
                os.startfile(os.path.join(music_dir, songs[0]))

        elif 'tell me a joke' in query:
            joke = pyjokes.get_joke()
            print(joke)
            speak(joke)

        elif 'shut down the system' in query:
            os.system("shutdown /s /t 5")

        elif "restart the system" in query:
            os.system('shutdown /r /t 5')
  
        elif 'switch the window' in query:
            pyautogui.keyDown("alt")
            pyautogui.press("tab")
            time.sleep(1)
            pyautogui.keyUp("air")

        elif 'tell me the news' in query:
            speak("Please wait mam, fetching the latest news.")
            news()
        
        
        elif "sleep the system" in query:
            os.system("rundll32.exe powrprof.dll,SetSuspendState 0,1,0")
        
        
        
        elif 'you are doing great' in query:
            speak("Thank you mam! It is my pleasure to be your assistant and provide the best service out of me.")
        
        elif 'goodbye' in query:
            speak("Have a nice day mam! Stay safe and Take care!")
        
        elif 'close notepad' in query:
            speak("Okay mam! Closing noteped.")
            os.system('taskkill /f /im notepad.exe')

        # elif "tweet" in query:
        #     speak("Mam! What should I tweet?")
        #     cmm = takeCommand().lower

        elif 'where i am' in query or 'where we are' in query:
            speak("wait mam, let me check")
            try:
                ipAdd = requests.get('https://api.ipify.org').text
                print(ipAdd)
                url = 'https://get.geojs.io/v1/ip/geo/'+ipAdd+'.json'
                geo_requests =requests.get(url)
                geo_data = geo_requests.json()
                city = geo_data['city']
                region = geo_data['region']
                country = geo_data['country']
                speak(f"Mam I am not sure but we are some where in {city} in the state  {region} of {country}")
            except Exception as e:
                speak("Sorry mam, due to unstable network connection I am not able to find where we are")
                pass

        

        elif 'instagram profile' in query or 'profile on insta' in query:
            speak("Mam please enter the username correctly.")
            name = input("Enter username here:  ")
            webbrowser.open(f"www.instagram.com/{name}")
            speak(f"Mam here is the profile of the user {name}")
            time.sleep(5)
            speak("Mam would you like to download profile picture of this account?")
            condition = takeCommand().lower()
            if 'yes' in condition:
                mod = instaloader.Instaloader()
                mod.download_profile(name, profile_pic_only = True)
                speak("I am done mam, profile picture is saved in our main folder, now I am ready to take new commands!")
            else:
                pass


        elif 'take screenshot' in query or 'screenshot' in query:
            speak("Mam! Please tell me the name for this screenshot file.")
            name = takeCommand().lower()
            speak("Mam Please hold the screen for a few seconds I am taking screenshot")
            time.sleep(3)
            img = pyautogui.screenshot()
            img.save(f"{name}.png")
            speak(" I am done mam ,  the screenshot is saved in our main folder, now I am ready for next command.")

        
        elif 'pdf' in query:
            pdf_reader()


        elif 'email to shivangi' in query:
            try:
                speak("Speak what should I say")
                content = takeCommand()
                to = "shivangi13sharma05@gmail.com"
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry mam! I am not able to send this email at the moment.")
        elif 'no thanks' in query:
            speak("Thank you mam! I look forward for more such interactions.")
            sys.exit()


        speak("Mam! do you have any other work?")
